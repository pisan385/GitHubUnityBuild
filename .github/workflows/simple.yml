# Based on https://game.ci/docs/github/getting-started
name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  build:
    name: Build my project
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          # - StandaloneWindows # Build a Windows standalone.
          # - StandaloneWindows64 # Build a Windows 64-bit standalone.
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - iOS # Build an iOS player.
          # - Android # Build an Android .apk standalone app.
          - WebGL # WebGL.
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: src/Library
          key: Library
          # restore-keys: Library

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          # No compression for WebGL Builds 
          buildMethod: PlayerSettings.WebGL.compressionFormat=WebGLCompressionFormat.Disabled
          projectPath: src
          targetPlatform: ${{ matrix.targetPlatform }}

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}


# Edit a yml file to get a new activation file for Unity license

name: Activation key

on:
  push:
    paths:
    # Only run when a yml file is edited
    - '**.yml'
jobs:
  acquire-activation:
      name: Acquire activation file
      on:

        jobs:
          activation:
            name: Request manual activation file ðŸ”‘
            runs-on: ubuntu-latest
            steps:
              # Request manual activation file
              - name: Request manual activation file
                id: getManualLicenseFile
                uses: game-ci/unity-request-activation-file@v2
                # Upload artifact (Unity_v20XX.X.XXXX.alf)
              - name: Expose as artifact
                uses: actions/upload-artifact@v1
                with:
                  name: ${{ steps.getManualLicenseFile.outputs.filePath }}
                  path: ${{ steps.getManualLicenseFile.outputs.filePath }}